{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/mtvs/13_next/module02-jsx_component/src/component/chap03/section02/component/FormEvent.jsx"],"sourcesContent":["\"use client\";\r\n\r\n\r\nfunction FormEvent() {\r\n    // 입력 변경 이벤트 핸들러\r\n    const handleInputChange = (e) => {\r\n        console.log('입력값:', e.target.value);\r\n    };\r\n\r\n    // 폼 제출 이벤트 핸들러\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault(); // 폼 제출 기본 동작(페이지 새로고침) 방지 -> 새로고침이 일어난다는건 상태를 잃는다는것. ex)로그인 된 상태도 잃는것임\r\n\r\n        alert('폼이 제출되었습니다!');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* 폼 이벤트 (onChange, onSubmit) */}\r\n            <div style={{ marginBottom: '20px' }}>\r\n                <h3>폼 이벤트 (onChange, onSubmit)</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={handleInputChange} /* 이벤트가 변경될때 호출됨 */\r\n                        placeholder=\"텍스트를 입력하세요\"\r\n                    />\r\n                    <button type=\"submit\">제출</button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FormEvent;"],"names":[],"mappings":";;;;AAAA;;AAGA,SAAS;IACL,gBAAgB;IAChB,MAAM,oBAAoB,CAAC;QACvB,QAAQ,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,KAAK;IACtC;IAEA,eAAe;IACf,MAAM,eAAe,CAAC;QAElB,EAAE,cAAc,IAAI,uEAAuE;QAE3F,MAAM;IACV;IAEA,qBACI;kBAEI,cAAA,8OAAC;YAAI,OAAO;gBAAE,cAAc;YAAO;;8BAC/B,8OAAC;8BAAG;;;;;;8BACJ,8OAAC;oBAAK,UAAU;;sCACZ,8OAAC;4BACG,MAAK;4BACL,UAAU;4BACV,aAAY;;;;;;sCAEhB,8OAAC;4BAAO,MAAK;sCAAS;;;;;;;;;;;;;;;;;;;AAK1C;uCAEe","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///C:/mtvs/13_next/module02-jsx_component/src/component/chap03/section02/component/KeyEvent.jsx"],"sourcesContent":["\"use client\";\r\n\r\nfunction KeyEvent() {\r\n    // 키보드 이벤트 핸들러\r\n    const handleKeyDown = (e) => {\r\n        console.log('눌린 키:', e.key);\r\n        if (e.key === 'Enter') {\r\n            alert('Enter 키를 누르셨습니다!');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* 키보드 이벤트 (onKeyDown) */}\r\n            <div>\r\n                <h3>키보드 이벤트 (onKeyDown)</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    onKeyDown={handleKeyDown}\r\n                    placeholder=\"Enter 키를 눌러보세요\"\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default KeyEvent;"],"names":[],"mappings":";;;;AAAA;;AAEA,SAAS;IACL,cAAc;IACd,MAAM,gBAAgB,CAAC;QACnB,QAAQ,GAAG,CAAC,SAAS,EAAE,GAAG;QAC1B,IAAI,EAAE,GAAG,KAAK,SAAS;YACnB,MAAM;QACV;IACJ;IAEA,qBACI;kBAEI,cAAA,8OAAC;;8BACG,8OAAC;8BAAG;;;;;;8BACJ,8OAAC;oBACG,MAAK;oBACL,WAAW;oBACX,aAAY;;;;;;;;;;;;;AAMhC;uCAEe","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///C:/mtvs/13_next/module02-jsx_component/src/component/chap03/section02/component/MouseEvent.jsx"],"sourcesContent":["\"use client\";\r\n\r\nfunction MouseEvent() {\r\n    // 마우스 이벤트 핸들러\r\n    const handleMouseOver = (e) => {\r\n        console.log('마우스가 오버되었습니다.');\r\n        e.target.style.backgroundColor = '#f0f0f0';\r\n    };\r\n\r\n    const handleMouseOut = (e) => {\r\n        console.log('마우스가 떠났습니다.');\r\n        e.target.style.backgroundColor = 'transparent';\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* 마우스 이벤트 (onMouseOver, onMouseOut) */}\r\n            <div style={{ marginBottom: '20px' }}>\r\n                <h3>마우스 이벤트 (onMouseOver, onMouseOut)</h3>\r\n                <div\r\n                    style={{\r\n                        padding: '10px',\r\n                        border: '1px solid #ccc',\r\n                        cursor: 'pointer'\r\n                    }}\r\n                    onMouseOver={handleMouseOver}\r\n                    onMouseOut={handleMouseOut}\r\n                >\r\n                    마우스를 올려보세요\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MouseEvent;"],"names":[],"mappings":";;;;AAAA;;AAEA,SAAS;IACL,cAAc;IACd,MAAM,kBAAkB,CAAC;QACrB,QAAQ,GAAG,CAAC;QACZ,EAAE,MAAM,CAAC,KAAK,CAAC,eAAe,GAAG;IACrC;IAEA,MAAM,iBAAiB,CAAC;QACpB,QAAQ,GAAG,CAAC;QACZ,EAAE,MAAM,CAAC,KAAK,CAAC,eAAe,GAAG;IACrC;IAGA,qBACI;kBAEI,cAAA,8OAAC;YAAI,OAAO;gBAAE,cAAc;YAAO;;8BAC/B,8OAAC;8BAAG;;;;;;8BACJ,8OAAC;oBACG,OAAO;wBACH,SAAS;wBACT,QAAQ;wBACR,QAAQ;oBACZ;oBACA,aAAa;oBACb,YAAY;8BACf;;;;;;;;;;;;;AAMjB;uCAEe","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///C:/mtvs/13_next/module02-jsx_component/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}